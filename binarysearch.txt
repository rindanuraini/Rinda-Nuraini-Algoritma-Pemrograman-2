PENCARIAN BAGI DUA (BINARY SEARCH)
Dalam mencari data, larik dibagi menjadi dua, dan pada larik yang terurut menurun, jika data yang dicari lebih kecil dari data tengah, maka pencarian dilanjutkan ke arah kiri, dan sebaliknya. Data yang disimpan dalam larik harus sudah terurut. Dalam proses pencarian, kita memerlukan 2 buah indeks larik, yaitu indeks terkecil dan terbesar.
Binary search adalah sebuah algoritma pencarian dengan cara membagi data menjadi dua bagian setiap kali terjadi proses pencarian untuk menemukan nilai tertentu dalam sebuah larik (array) linear. Metode Pencarian Bagi Dua (Binary Search) Metode ini diterapkan pada sekumpulan data yang sudah terurut (menaik atau menurun). Metode ini lebih cepat dibandingkan metode pencarian beruntun. Data yang sudah terurut menjadi syarat mutlak untuk menggunakan metode ini.
Konsep dasar metode ini adalah membagi 2 jumlah elemennya, dan menentukan apakah data yang berada pada elemen paling tengah bernilai sama, lebih dari atau kurang dari nilai data yang akan dicari. Jika bernilai sama, maka langsung data yang dicari ditemukan. Jika data di elemen terurut naik, maka jika data yang berada di tengah kurang dari data yang dicari, maka pencarian selanjutnya berkisar di elemen tengah ke kanan, dan begitu seterusnya sampai ketemu atau tidak sama sekali. Dan sebaliknya untuk nilai data yang berada di tengah lebih dari data yang dicari, maka pencarian selanjutnya berkisar di elemen tengah ke kiri, dan begitu seterusnya sampai ketemu atau tidak sama sekali. Dan demikian sebaliknya untuk data yang terurut menurun.
Dalam hal ini tentukan indeks paling awal dan indeks paling akhir, untuk membagi 2 elemen tersebut. Indeks awal = i, dimana nilai i, pada awalnya bernilai 0; Indeks akhir = j, dimana nilai j, pada awalnya bernilai sama dengan jumlah elemen.

Pencarian Biner (Binary Search) dilakukan untuk :
	•	Memperkecil jumlah operasi pembandingan yang harus dilakukan antara data yang dicari dengan data yang ada di dalam tabel, khususnya untuk jumlah data yang sangat besar ukurannya.
	•	Beban komputasi juga lebih kecil karena pencarian dilakukan dari depan, belakang, dan tengah.
	•	Prinsip dasarnya adalah melakukan proses pembagian ruang pencarian secara berulang-ulang sampai data ditemukan atau sampai ruang pencarian tidak dapat dibagi lagi (berarti ada kemungkinan data tidak ditemukan).
	•	Syarat utama untuk pencarian biner adalah data di dalam tabel harus sudah terurut.
 	Kekurangan binary search yaitu data harus disorting dahulu. 

	Langkah-langkah dalam Mencari data Menggunakan Konsep Pencarian Bagi Dua (Binary Search) :
		Berilah simbol untuk mempermudah dalam memproses data, seperti sekumpulan data dikodekan menjadi n , larik dikodekan L , dan data yang akan dicari dikodekan menjadi X.
		Sepakati bahwa nilai index awal atau kita kodekan menjadi a=0 dan index akhir atau kita kodekan menjadi b=n-1.
		Tentukan apakah sekumpulan data terurut yang akan dicari bersifat menaik atau menurun dengan cara membandingkan elemen kanan dan kiri.
		Jika data elemen paling kiri L[0] > data elemen paling kanan L[n-1], maka data terurut tersebut menurun.
		Jika data elemen paling kiri L[0] < data elemen paling kanan L[n-1], maka data terurut tersebut menaik.
		Selanjutnya kita beri kode untuk index data tengah sebuah array tersebut dengan variabel c , sehingga :	C = (a+b)div 2
		Dari rumus diatas,kita langsung mendapatkan data tengah nya. Lalu periksa apakah L[c] = X , maka data yang dicari langsung didapat dari rumus C diatas.
		Tetapi jika L[c] < X maka pencarian data dilakukan dari sisi kanan index c atau data tengah dengan menggunakan rumus C tersebut.Dan jika L[c] >X maka pencarian data dilakukan dari sisi kiri index c atau data tengah dengan menggunakan rumus C dimana dengan nilai b sama dengan nilai c dan pencarian dilakukan sampai seterusnya hingga ketemu nilai X atau tidak sama sekali. 
(Note : Konsep ini untuk data terurut menaik. Jika data terurut menurun maka hanya mengubah konsep L[c]<X dari sisi kiri dan L[c]>X dari sisi kanan).
	
Berikut ilustrasi pencarian menggunakan binary search dengan bantuan tabel. Misalkan kita mempunyai data sebagai berikut : {1, 2, 3, 4, 5, 6, 7, 8}. Data yang kita cari adalah 7. 

Untuk menyelesaikan soal diatas, maka diselesaikan dengan cara berikut : 
Diketahui nilai kiri=0 (nilai awal array) dan nilai kanan = 8.
Rumus posisi tengah adalah (kanan + kiri)/2. Jadi Nilai tengah pada langkah pertama yaitu (8+0)/2=4. Jika dimasukkan kedalam tabel akan menunjuk nilai 4 (berwarna orange). Kemudian dibandingkan dengan nilai yang dicari (3), karena nilai yang dicari lebih besar dari data ditengah maka pencarian di alihkan ke sebelah kanan dengan batas kiri (awal pencarian) merupakan nilai tengah yakni 4.
Nilai tengah pada langkah kedua yaitu (8+4)/2=6. Jika dimasukkan ke dalam tabel maka akan menunjuk nilai 6 (berwarna orange). Kemudian dibandingkan lagi dengan nilai yang dicari (7), karena nilai yang dicari masih lebih besar dari nilai tengah, maka pencarian dialihkan lagi ke kanan dengan batas kiri (awal pencarian) merupakan nilai tengah yakni 6.
Nilai tengah pada langkah ketiga yaitu (8+6)/2=7. Jika dimasukkan ke dalam tabel maka akan menunjuk nilai 7 (berwarna kuning). 
Kemudian dibandingkan lagi dengan nilai yang dicari (7), setelah dibandingkan nilainya sama, maka pencarian selesai dengan keterangan data ditemukan.

Untuk lebih jelasnya lagi perhatikan algoritma deskriptif binary search berikut :
	1.	Input seluruh data kedalam array.
	2.	Tentukan algoritma untuk sorting array ascending (kecil ke besar).
	3.	Input data yang dicari.
	4.	Tentukan nilai kiri, kanan, dan tengah dengan rumus :
		a.	Kiri sama dengan nol
		b.	Kanan lebih kecil dari jumlah data
		c.	Tengah sama dengan hasil kanan dikurangi hasil kiri dibagi dua.
	5.	Jika elemen tengah tidak sama dengan data yang dicari, maka :
		a.	Jika elemen tengah lebih besar dari data yang dicari, maka pencarian dilakukan pada  setengah array pertama. Caranya dengan menggunakan perintah kiri sama dengan tengah ditambah satu.
		b.	Jika elemen tengah lebih kecil dari data yang dicari, maka pencarian dilakukan pada setengah array berikutnya. Caranya dengan menggunakan perintah kanan sama dengan tengah dikurangi satu.
		c.	Tengah sama dengan kiri ditambah (kanan - kiri) dibagi dua.
	6.	Jika elemen tengah sama dengan data yang dicari, maka data ditemukan. Sedangkan jika elemen tengah tidak sama dengan data yang dicari, maka data tidak ditemukan.

Berikut contoh program untuk pencarian bagi dua (Binary Search) :

#include <iostream>
using namespace std;

int main () {
int x,data[10], kiri, kanan, tengah,temp, key;
bool ketemu = false;

	cout << "masukkan jumlah data : ";
	cin >> x;

		for(int i=0;i<x;i++)
		{
			cout << "angka ke- ["<< i <<"] : ";
			cin >> data[i];
		}
		for (int i=0;i<x;i++)
		{
		for(int j=0;j<x-1;j++)
		{
			if(data [j] > data [j+1])
			{
				temp = data[j];
				data[j] = data[j+1];
				data[j+1] = temp;
			}
		}
		}
		
	cout <<"data yang telah di urutkan adalah: ";
	for(int i=0;i<x;i++)
	{
	cout << data [i] << " ";
	}
	cout << "\n masukkkan angka yang dicari : ";
	cin >> key;
	
	kiri = 0;
	kanan = x-1;
	
	while(kiri <= kanan)
	{
	tengah = (kiri + kanan)/2;
		if(key == data [tengah])
		{
		ketemu = true;
		break;
		}
	else
		{
		kiri = tengah+1;
		}
	}
	if(ketemu == true)
		cout << "angka ditemukan ";
		else
		cout<< "angka tidak ditemukan";
		return (0);
}

Terima Kasih